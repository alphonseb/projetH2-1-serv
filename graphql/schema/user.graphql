scalar Date

type User {
    id: ID!
    name: String!
    mail: String!
    password: String!
    profilePicture: Media!
    gender: String!
    phone: String
    city: String
    birth: Birth
    work: String
    loveSituation: String
    hobbies: [String]
    sports: [String]
    books(limit: Int order: BookOrder!): [Book]
    notifications: [Notification!]!
    family: Family
}

type Birth {
    date: Date!
    place: String
}

type Notification {
    id: ID!
    content: String!
    from: User
    to: User!
    isRead: Boolean!
    type: String!
    date: Date!
}

type Family {
    mother: FamilyUser!
    father: FamilyUser!
    fratery: [FamilyUser]!
    partner: FamilyUser!
    children: [FamilyUser]!
}

type FamilyUser {
    isVerified: Boolean!
    node: User
}

enum BookOrder {
    DATE_ASC
    DATE_DESC
}